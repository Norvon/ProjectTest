//: [Previous](@previous)

import Foundation

// Open 访问和 public 访问允许实体被定义模块中的任意源文件访问，同样可以被另一模块的源文件通过导入该定义模块来访问。在指定框架的公共接口时，通常使用 open 或 public 访问。
// Internal 访问允许实体被定义模块中的任意源文件访问，但不能被该模块之外的任何源文件访问。通常在定义应用程序或者是框架的内部结构时使用。
// File-private 访问将实体的使用限制于当前定义文件夹中。当一些细节在整个文件中使用时，使用 file-private 访问隐藏特定功能的实现细节
// private 访问将实体的使用限制封闭声明中。当一些细节仅在单独的声明中使用时，使用 private 访问隐藏特定功能的细节实现。


// open 和 public 的区别
// public 访问，或者任何更严格的访问级别的类，只能在其定义模块中被继承。
// public 访问，或者任何更严格d访问级别的类成员，只能被其定义模块的子类重写。
// open 类可以在其定义模块中被继承，也可以在任何导入定义模块的其他模块中被继承。
// open 类成员可以被其定义模块的子类重写，也可以被导入其定义模块的任何模块重写。

// 访问级别的指导准则
// 实体不可以被更低（限制更多）访问级别的实体定义。


public class A {
    fileprivate func someMethod(){}
}

internal class B: A {
    override internal func someMethod() {
        super .someMethod()
    }
}


// 在原本的声明中声明一个私有成员，然后在同一文件的扩展中访问它；
// 在扩展中声明一个私有成员，然后在同一文件的其他扩展中访问它；
// 在扩展中声明一个私有成员，然后在同一文件的原本声明中访问它。
//: [Next](@next)
